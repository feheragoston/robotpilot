#ifndef PARAM_H_
#define PARAM_H_


#include <math.h>



#define PING_REPLY_MAX_WAIT_TIME_SEC		1


#define SERVO_COUNT							6


#define MAGNET_COUNT						2

#define MAGNET_POLARITY_p24V				0x01	//01: +24V
#define MAGNET_POLARITY_0V					0x00	//00: 0V
#define MAGNET_POLARITY_m24V				0xFF	//FF: -24V



#define MAGNET_PUSH							MAGNET_POLARITY_p24V
#define MAGNET_OFF							MAGNET_POLARITY_0V
#define MAGNET_PULL							MAGNET_POLARITY_m24V



#define INPUT_ANALOG_COUNT					6
#define INPUT_DIGITAL_COUNT					8


#define ACT_INPROGRESS						1
#define ACT_FINISHED						0
#define ACT_ERROR							-1


#define COLOR_RED							true
#define COLOR_BLUE							false



#define SERVO_GRIPPER_LEFT_INDEX					0
#define SERVO_GRIPPER_RIGHT_INDEX					1
#define SERVO_LEFT_ARM_INDEX						2
#define SERVO_RIGHT_ARM_INDEX						3

#define MAGNET_LEFT_INDEX							0
#define MAGNET_RIGHT_INDEX							1

#define INPUT_BUTTON_START_INDEX					0
#define INPUT_BUTTON_COLOR_INDEX					1
#define INPUT_BUTTON_FRONT_LEFT_INDEX				2
#define INPUT_BUTTON_FRONT_RIGHT_INDEX				3
#define INPUT_BUTTON_REAR_LEFT_INDEX				4
#define INPUT_BUTTON_REAR_RIGHT_INDEX				5

#define INPUT_BUTTON_COLOR_IS_ACTIVE_RED			1





#define SERVO_GRIPPER_MAX_SPEED						100	//mm/s
#define SERVO_GRIPPER_MAX_ACC						10	//mm/s^2


#define KEEP_ALIVE_PERIOD_MS				200



#define AREA_LENGTH_X							2100
#define AREA_LENGTH_Y							3000
#define ROBOT_DISTANCE_ON_FRONT_WALL			200
#define ROBOT_DISTANCE_ON_REAR_WALL				150

#define DEADRECK_CALIB_SPEED_ABS				0.1
#define DEADRECK_CALIB_OMEGA_ABS				0.2
#define DEADRECK_CALIB_BETA_ABS					0.08
#define DEADRECK_START_DISTANCE_X				250
#define DEADRECK_START_DISTANCE_Y				250














#define GATEWAY_KEEP_ALIVE_MS				1000
#define GATEWAY_SEND_PERIOD_TO_PC_MS		100
#define GATEWAY_SEND_PERIOD_TO_NODE_MS		0

#define CONSOLE_ON_CANB						0
#define CONSOLE_KEEP_ALIVE_MS				1000
#define CONSOLE_SEND_PERIOD_TO_PC_MS		100
#define CONSOLE_SEND_PERIOD_TO_NODE_MS		0

#define DEADRECK_ON_CANB					0
#define DEADRECK_KEEP_ALIVE_MS				1000
#define DEADRECK_SEND_PERIOD_TO_PC_MS		100
#define DEADRECK_SEND_PERIOD_TO_NODE_MS		10

#define BDC_ON_CANB							0
#define BDC_KEEP_ALIVE_MS					1000
#define BDC_SEND_PERIOD_TO_PC_MS			100
#define BDC_SEND_PERIOD_TO_NODE_MS			0

#define INPUT_ON_CANB						0
#define INPUT_KEEP_ALIVE_MS					1000
#define INPUT_SEND_PERIOD_TO_PC_MS			100
#define INPUT_SEND_PERIOD_TO_NODE_MS		0

#define MAGNET_ON_CANB						0
#define MAGNET_KEEP_ALIVE_MS				1000
#define MAGNET_SEND_PERIOD_TO_PC_MS			100
#define MAGNET_SEND_PERIOD_TO_NODE_MS		0

#define SERVO_ON_CANB						0
#define SERVO_KEEP_ALIVE_MS					1000
#define SERVO_SEND_PERIOD_TO_PC_MS			100
#define SERVO_SEND_PERIOD_TO_NODE_MS		0

#define SONAR_ON_CANB						1
#define SONAR_KEEP_ALIVE_MS					1000
#define SONAR_SEND_PERIOD_TO_PC_MS			100
#define SONAR_SEND_PERIOD_TO_NODE_MS		0

#define POWER_ON_CANB						0
#define POWER_KEEP_ALIVE_MS					1000
#define POWER_SEND_PERIOD_TO_PC_MS			100
#define POWER_SEND_PERIOD_TO_NODE_MS		0
















//AAA_BBB_CCC_X0:		AAA node-nal a BBB-CCC fuggveny X0, Y0, X1, Y1 pontjai, hogy egy egyenes ket ponttal adjunk meg
//AAA_BBB_CCC_GRAD:		AAA node-nal a BBB-CCC fuggveny meredeksege (dCCC / dBBB)
#define CONSOLE_INCR_MM_X0					1
#define CONSOLE_INCR_MM_Y0					100
#define CONSOLE_INCR_MM_X1					2
#define CONSOLE_INCR_MM_Y1					200
#define CONSOLE_INCR_MM_GRAD				((double)(CONSOLE_INCR_MM_Y1 - CONSOLE_INCR_MM_Y0) / (CONSOLE_INCR_MM_X1 - CONSOLE_INCR_MM_X0))


//0V -> 0
//3V -> (2^12 - 1)
#define INPUT_ANALOG_V_X0					0
#define INPUT_ANALOG_V_Y0					0
#define INPUT_ANALOG_V_X1					((((u32)0x01) << 12) - 1)	//(2^12 - 1)
#define INPUT_ANALOG_V_Y1					3
#define INPUT_ANALOG_V_GRAD					((double)(INPUT_ANALOG_V_Y1 - INPUT_ANALOG_V_Y0) / (INPUT_ANALOG_V_X1 - INPUT_ANALOG_V_X0))


#define INPUT_LONG_SHARP_ON_ANALOG_0			0
#define INPUT_LONG_SHARP_ON_ANALOG_1			0
#define INPUT_LONG_SHARP_ON_ANALOG_2			0
#define INPUT_LONG_SHARP_ON_ANALOG_3			0
#define INPUT_LONG_SHARP_ON_ANALOG_4			0
#define INPUT_LONG_SHARP_ON_ANALOG_5			0
#define INPUT_LONG_SHARP_ON_ANALOG_6			0


#define INPUT_ACTIVE_LEVEL_DIGITAL_0			1
#define INPUT_ACTIVE_LEVEL_DIGITAL_1			1
#define INPUT_ACTIVE_LEVEL_DIGITAL_2			1
#define INPUT_ACTIVE_LEVEL_DIGITAL_3			1
#define INPUT_ACTIVE_LEVEL_DIGITAL_4			1
#define INPUT_ACTIVE_LEVEL_DIGITAL_5			1
#define INPUT_ACTIVE_LEVEL_DIGITAL_6			1






#define SERVO_0_RAD_INCR_X0					0
#define SERVO_0_RAD_INCR_Y0					1000
#define SERVO_0_RAD_INCR_X1					M_PI
#define SERVO_0_RAD_INCR_Y1					2000
#define SERVO_0_RAD_INCR_GRAD				((double)(SERVO_0_RAD_INCR_Y1 - SERVO_0_RAD_INCR_Y0) / (SERVO_0_RAD_INCR_X1 - SERVO_0_RAD_INCR_X0))


#define SERVO_1_RAD_INCR_X0					1
#define SERVO_1_RAD_INCR_Y0					1000
#define SERVO_1_RAD_INCR_X1					M_PI
#define SERVO_1_RAD_INCR_Y1					2000
#define SERVO_1_RAD_INCR_GRAD				((double)(SERVO_1_RAD_INCR_Y1 - SERVO_1_RAD_INCR_Y0) / (SERVO_1_RAD_INCR_X1 - SERVO_1_RAD_INCR_X0))


#define SERVO_2_RAD_INCR_X0					1
#define SERVO_2_RAD_INCR_Y0					1000
#define SERVO_2_RAD_INCR_X1					M_PI
#define SERVO_2_RAD_INCR_Y1					2000
#define SERVO_2_RAD_INCR_GRAD				((double)(SERVO_2_RAD_INCR_Y1 - SERVO_2_RAD_INCR_Y0) / (SERVO_2_RAD_INCR_X1 - SERVO_2_RAD_INCR_X0))


#define SERVO_3_RAD_INCR_X0					1
#define SERVO_3_RAD_INCR_Y0					1000
#define SERVO_3_RAD_INCR_X1					M_PI
#define SERVO_3_RAD_INCR_Y1					2000
#define SERVO_3_RAD_INCR_GRAD				((double)(SERVO_3_RAD_INCR_Y1 - SERVO_3_RAD_INCR_Y0) / (SERVO_3_RAD_INCR_X1 - SERVO_3_RAD_INCR_X0))


#define SERVO_4_RAD_INCR_X0					1
#define SERVO_4_RAD_INCR_Y0					1000
#define SERVO_4_RAD_INCR_X1					M_PI
#define SERVO_4_RAD_INCR_Y1					2000
#define SERVO_4_RAD_INCR_GRAD				((double)(SERVO_4_RAD_INCR_Y1 - SERVO_4_RAD_INCR_Y0) / (SERVO_4_RAD_INCR_X1 - SERVO_4_RAD_INCR_X0))


#define SERVO_5_RAD_INCR_X0					1
#define SERVO_5_RAD_INCR_Y0					1000
#define SERVO_5_RAD_INCR_X1					M_PI
#define SERVO_5_RAD_INCR_Y1					2000
#define SERVO_5_RAD_INCR_GRAD				((double)(SERVO_5_RAD_INCR_Y1 - SERVO_5_RAD_INCR_Y0) / (SERVO_5_RAD_INCR_X1 - SERVO_5_RAD_INCR_X0))





#define SERVO_0_HARDWARE_LIMIT_LOW_POS_INCR				1000
#define SERVO_0_HARDWARE_LIMIT_HIGH_POS_INCR			2000

#define SERVO_1_HARDWARE_LIMIT_LOW_POS_INCR				1000
#define SERVO_1_HARDWARE_LIMIT_HIGH_POS_INCR			2000

#define SERVO_2_HARDWARE_LIMIT_LOW_POS_INCR				1000
#define SERVO_2_HARDWARE_LIMIT_HIGH_POS_INCR			2000

#define SERVO_3_HARDWARE_LIMIT_LOW_POS_INCR				1000
#define SERVO_3_HARDWARE_LIMIT_HIGH_POS_INCR			2000

#define SERVO_4_HARDWARE_LIMIT_LOW_POS_INCR				1000
#define SERVO_4_HARDWARE_LIMIT_HIGH_POS_INCR			2000

#define SERVO_5_HARDWARE_LIMIT_LOW_POS_INCR				1000
#define SERVO_5_HARDWARE_LIMIT_HIGH_POS_INCR			2000




#define POWER_VOLTAGE_WARNING_V				18
#define POWER_VOLTAGE_ERROR_V				20
#define POWER_CURRENT_WARNING_A				3
#define POWER_CURRENT_ERROR_A				5




//0V -> 0
//3V -> (2^12 - 1)
#define POWER_ANALOG_V_X0					0
#define POWER_ANALOG_V_Y0					0
#define POWER_ANALOG_V_X1					((((u32)0x01) << 12) - 1)	//(2^12 - 1)
#define POWER_ANALOG_V_Y1					3
#define POWER_ANALOG_V_GRAD					((double)(POWER_ANALOG_V_Y1 - POWER_ANALOG_V_Y0) / (POWER_ANALOG_V_X1 - POWER_ANALOG_V_X0))


//2.5V -> 0A
//0V -> 30A
#define POWER_V_A_X0					0
#define POWER_V_A_Y0					30
#define POWER_V_A_X1					2.5
#define POWER_V_A_Y1					0
#define POWER_V_A_GRAD					((double)(POWER_V_A_Y1 - POWER_V_A_Y0) / (POWER_V_A_X1 - POWER_V_A_X0))




//grad = (y-y0) / (x-x0)
//x = (y-y0) / grad + x0
#define POWER_CURRENT_WARNING_V				((double)(POWER_CURRENT_WARNING_A - POWER_V_A_Y0) / POWER_V_A_GRAD + POWER_V_A_X0)
#define POWER_CURRENT_ERROR_V				((double)(POWER_CURRENT_ERROR_A - POWER_V_A_Y0) / POWER_V_A_GRAD + POWER_V_A_X0)





#define DEADRECK_WHEEL_DISTANCE						500
#define DEADRECK_LEFT_ONE_INCREMENT_DISTANCE		0.1
#define DEADRECK_RIGHT_ONE_INCREMENT_DISTANCE		0.1
#define DEADRECK_LEFT_IS_ROTATE_DIR_A				1
#define DEADRECK_RIGHT_IS_ROTATE_DIR_A				1
#define DEADRECK_IS_LEFT_EQEP1						1





#define CONSOLE_CONTOLLER_LIMIT_LOW_POS_INCR		200
#define CONSOLE_CONTOLLER_LIMIT_HIGH_POS_INCR		100100
#define CONSOLE_HARDWARE_LIMIT_LOW_POS_INCR			100
#define CONSOLE_HARDWARE_LIMIT_HIGH_POS_INCR		100200
#define CONSOLE_CONTROLLER_PARAMETER_P				2.3
#define CONSOLE_CONTROLLER_PARAMETER_I				1.1
#define CONSOLE_CONTROLLER_PARAMETER_D				5.5
#define CONSOLE_PWM_MODE							4
#define CONSOLE_LIMIT_SWITCH_IS_ACTIVE_HIGH			1
#define CONSOLE_IS_ENC_EQEP1						1
#define CONSOLE_MOTOR_PLUS_CW						1






#endif	//PARAM_H_
