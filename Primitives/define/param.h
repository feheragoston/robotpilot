#ifndef PARAM_H_
#define PARAM_H_


#include <math.h>



#define PING_REPLY_MAX_WAIT_TIME_SEC			1
#define INIT_PARAM_REPLY_MAX_WAIT_TIME_SEC		1


#define SERVO_COUNT							6


#define MAGNET_COUNT						2

#define MAGNET_POLARITY_p24V				0x01	//01: +24V
#define MAGNET_POLARITY_0V					0x00	//00: 0V
#define MAGNET_POLARITY_m24V				0xFF	//FF: -24V

#define MAGNET_PUSH							MAGNET_POLARITY_p24V
#define MAGNET_OFF							MAGNET_POLARITY_0V
#define MAGNET_PULL							MAGNET_POLARITY_m24V



#define INPUT_ANALOG_COUNT					7
#define INPUT_DIGITAL_COUNT					10


#define ACT_INPROGRESS						1
#define ACT_FINISHED						0
#define ACT_ERROR							-1


#define COLOR_RED							false
#define COLOR_BLUE							true



#define MAGNET_LEFT_INDEX									0
#define MAGNET_RIGHT_INDEX									1





#define INPUT_DIGITAL_START_BUTTON_INDEX					6
#define INPUT_DIGITAL_COLOR_BUTTON_INDEX					7
#define INPUT_DIGITAL_REAR_LEFT_LIMIT_SWITCH_INDEX			2
#define INPUT_DIGITAL_REAR_RIGHT_LIMIT_SWITCH_INDEX			3
#define INPUT_DIGITAL_PLUS_0_INDEX							4
#define INPUT_DIGITAL_PLUS_1_INDEX							5
#define INPUT_DIGITAL_PLUS_2_INDEX							0
#define INPUT_DIGITAL_PLUS_3_INDEX							1
#define INPUT_DIGITAL_PLUS_4_INDEX							8
#define INPUT_DIGITAL_PLUS_5_INDEX							9


#define INPUT_DIGITAL_START_BUTTON_ACTIVE_LEVEL				1
#define INPUT_DIGITAL_COLOR_BUTTON_ACTIVE_LEVEL				0	//aktiv a kek
#define INPUT_DIGITAL_REAR_LEFT_LIMIT_SWITCH_ACTIVE_LEVEL	0
#define INPUT_DIGITAL_REAR_RIGHT_LIMIT_SWITCH_ACTIVE_LEVEL	0
#define INPUT_DIGITAL_PLUS_0_ACTIVE_LEVEL					0
#define INPUT_DIGITAL_PLUS_1_ACTIVE_LEVEL					0
#define INPUT_DIGITAL_PLUS_2_ACTIVE_LEVEL					0
#define INPUT_DIGITAL_PLUS_3_ACTIVE_LEVEL					0
#define INPUT_DIGITAL_PLUS_4_ACTIVE_LEVEL					0
#define INPUT_DIGITAL_PLUS_5_ACTIVE_LEVEL					0




#define INPUT_ANALOG_LEFT_HIGH_SHARP_INDEX		0
#define INPUT_ANALOG_LEFT_LOW_SHARP_INDEX		1
#define INPUT_ANALOG_RIGHT_HIGH_SHARP_INDEX		2
#define INPUT_ANALOG_RIGHT_LOW_SHARP_INDEX		3
#define INPUT_ANALOG_PLUS_0_INDEX				4
#define INPUT_ANALOG_PLUS_1_INDEX				5
#define INPUT_ANALOG_PLUS_2_INDEX				6







#define SERVO_GRIPPER_MAX_SPEED						100	//deg/s
#define SERVO_GRIPPER_MAX_ACC						10	//deg/s^2


#define KEEP_ALIVE_PERIOD_MS				200



#define AREA_LENGTH_X							2100
#define AREA_LENGTH_Y							3000
#define ROBOT_DISTANCE_ON_FRONT_WALL			200
#define ROBOT_DISTANCE_ON_REAR_WALL				150

#define DEADRECK_CALIB_SPEED_ABS				0.1
#define DEADRECK_CALIB_OMEGA_ABS				0.2
#define DEADRECK_CALIB_BETA_ABS					0.08
#define DEADRECK_START_DISTANCE_X				250
#define DEADRECK_START_DISTANCE_Y				250










#define INIT_RETURN_FALSE_IF_ERROR				false






#define CONSOLE_ON_CANB							0
#define DEADRECK_ON_CANB						0
#define BDC_ON_CANB								0
#define INPUT_ON_CANB							0
#define MAGNET_ON_CANB							0
#define SERVO_ON_CANB							0
#define SONAR_ON_CANB							0
#define POWER_ON_CANB							0






#define BROADCAST_KEEP_ALIVE_MS					1000
#define BROADCAST_SEND_PERIOD_TO_PC_MS			100
#define BROADCAST_SEND_PERIOD_TO_NODE_MS		10


#define USE_BROADCAST_KEEP_ALIVE_MS				false
#define USE_BROADCAST_SEND_PERIOD_TO_PC_MS		false
#define USE_BROADCAST_SEND_PERIOD_TO_NODE_MS	false




#define GATEWAY_KEEP_ALIVE_MS					1000
#define GATEWAY_SEND_PERIOD_TO_PC_MS			100
#define GATEWAY_SEND_PERIOD_TO_NODE_MS			0

#define CONSOLE_KEEP_ALIVE_MS					1000
#define CONSOLE_SEND_PERIOD_TO_PC_MS			100
#define CONSOLE_SEND_PERIOD_TO_NODE_MS			0

#define DEADRECK_KEEP_ALIVE_MS					1000
#define DEADRECK_SEND_PERIOD_TO_PC_MS			100
#define DEADRECK_SEND_PERIOD_TO_NODE_MS			10

#define BDC_KEEP_ALIVE_MS						1000
#define BDC_SEND_PERIOD_TO_PC_MS				100
#define BDC_SEND_PERIOD_TO_NODE_MS				0

#define INPUT_KEEP_ALIVE_MS						1000
#define INPUT_SEND_PERIOD_TO_PC_MS				100
#define INPUT_SEND_PERIOD_TO_NODE_MS			0

#define MAGNET_KEEP_ALIVE_MS					1000
#define MAGNET_SEND_PERIOD_TO_PC_MS				100
#define MAGNET_SEND_PERIOD_TO_NODE_MS			0

#define SERVO_KEEP_ALIVE_MS						1000
#define SERVO_SEND_PERIOD_TO_PC_MS				100
#define SERVO_SEND_PERIOD_TO_NODE_MS			0

#define SONAR_KEEP_ALIVE_MS						1000
#define SONAR_SEND_PERIOD_TO_PC_MS				100
#define SONAR_SEND_PERIOD_TO_NODE_MS			0

#define POWER_KEEP_ALIVE_MS						1000
#define POWER_SEND_PERIOD_TO_PC_MS				100
#define POWER_SEND_PERIOD_TO_NODE_MS			0














#define GET_GRAD(X0, Y0, X1, Y1)			( ((double)(Y1) - (double)(Y0)) / ((double)(X1) - (double)(X0)) )



//AAA_BBB_CCC_X0:		AAA node-nal a BBB-CCC fuggveny X0, Y0, X1, Y1 pontjai, hogy egy egyenest ket ponttal adjunk meg
//AAA_BBB_CCC_GRAD:		AAA node-nal a BBB-CCC fuggveny meredeksege (dCCC / dBBB)
#define CONSOLE_INCR_MM_X0					1
#define CONSOLE_INCR_MM_Y0					100
#define CONSOLE_INCR_MM_X1					2
#define CONSOLE_INCR_MM_Y1					200
#define CONSOLE_INCR_MM_GRAD				GET_GRAD(CONSOLE_INCR_MM_X0, CONSOLE_INCR_MM_Y0, CONSOLE_INCR_MM_X1, CONSOLE_INCR_MM_Y1)

#define CONSOLE_MM_TO_INCR(mm)				((u32)(((double)(mm) - CONSOLE_INCR_MM_Y0) / CONSOLE_INCR_MM_GRAD + CONSOLE_INCR_MM_X0)));
#define CONSOLE_INCR_TO_MM(incr)			(((double)(incr) - CONSOLE_INCR_MM_X0) * CONSOLE_INCR_MM_GRAD + CONSOLE_INCR_MM_Y0)



//---------- atszamitas ELEJE ----------
#define MESV_TO_ANALOG(mesv)					((u16)((float)(mesv) / 3 * 0x0FFF))			//3V-hoz a 12 bites ADC legnagyobb erteke
#define ANALOG_TO_MESV(analog)					((float)(analog) / 0x0FFF * 3)				//12 bites ADC legnagyobb ertekehez 3V

#define POWER_V_TO_MESV(v)						((float)(v) * 10 / (10 + 100))				//feszultsegmeresekhez 10k-100k leosztas
#define POWER_A_TO_MESV(a)						((float)(a) * (-2.5/30) + 2.5)				//0A -> 2.5V, 30A -> 0V

#define POWER_MESV_TO_V(mesv)					((float)(mesv) * (10 + 100) / 10)			//feszultsegmeresekhez 10k-100k leosztas
#define POWER_MESV_TO_A(mesv)					((float)(mesv) * (-30/2.5) + 30)			//2.5V -> 0A, 0V -> 30A

#define POWER_V_TO_ANALOG(v)					MESV_TO_ANALOG(POWER_V_TO_MESV(v))
#define POWER_A_TO_ANALOG(a)					MESV_TO_ANALOG(POWER_A_TO_MESV(a))

#define POWER_ANALOG_TO_V(analog)				POWER_MESV_TO_V(ANALOG_TO_MESV(analog))
#define POWER_ANALOG_TO_A(analog)				POWER_MESV_TO_A(ANALOG_TO_MESV(analog))

#define INPUT_MESV_TO_V(mesv)					((float)(mesv) * (22 + 22) / 22)			//feszultsegmeresekhez 22k-22k leosztas
#define INPUT_V_TO_MESV(v)						((float)(v) * 22 / (22 + 22))				//feszultsegmeresekhez 22k-22k leosztas


#define INPUT_V_TO_ANALOG(v)					MESV_TO_ANALOG(INPUT_V_TO_MESV(v))
#define INPUT_ANALOG_TO_V(analog)				INPUT_MESV_TO_V(ANALOG_TO_MESV(analog))
//---------- atszamitas VEGE ----------






#define SERVO_GRIPPER_LEFT_INDEX						0
#define SERVO_GRIPPER_RIGHT_INDEX						1
#define SERVO_LEFT_ARM_INDEX							2
#define SERVO_RIGHT_ARM_INDEX							3
#define SERVO_PLUS_0_INDEX								4
#define SERVO_PLUS_1_INDEX								5



#define SERVO_GRIPPER_LEFT_DEG_INCR_X0					0
#define SERVO_GRIPPER_LEFT_DEG_INCR_Y0					1000
#define SERVO_GRIPPER_LEFT_DEG_INCR_X1					180
#define SERVO_GRIPPER_LEFT_DEG_INCR_Y1					2000
#define SERVO_GRIPPER_LEFT_LIMIT_LOW_POS_INCR			700
#define SERVO_GRIPPER_LEFT_LIMIT_HIGH_POS_INCR			2200

#define SERVO_GRIPPER_RIGHT_DEG_INCR_X0					0
#define SERVO_GRIPPER_RIGHT_DEG_INCR_Y0					1000
#define SERVO_GRIPPER_RIGHT_DEG_INCR_X1					180
#define SERVO_GRIPPER_RIGHT_DEG_INCR_Y1					2000
#define SERVO_GRIPPER_RIGHT_LIMIT_LOW_POS_INCR			700
#define SERVO_GRIPPER_RIGHT_LIMIT_HIGH_POS_INCR			2200

#define SERVO_LEFT_ARM_DEG_INCR_X0						0
#define SERVO_LEFT_ARM_DEG_INCR_Y0						1000
#define SERVO_LEFT_ARM_DEG_INCR_X1						180
#define SERVO_LEFT_ARM_DEG_INCR_Y1						2000
#define SERVO_LEFT_ARM_LIMIT_LOW_POS_INCR				700
#define SERVO_LEFT_ARM_LIMIT_HIGH_POS_INCR				2200

#define SERVO_RIGHT_ARM_DEG_INCR_X0						0
#define SERVO_RIGHT_ARM_DEG_INCR_Y0						1000
#define SERVO_RIGHT_ARM_DEG_INCR_X1						180
#define SERVO_RIGHT_ARM_DEG_INCR_Y1						2000
#define SERVO_RIGHT_ARM_LIMIT_LOW_POS_INCR				700
#define SERVO_RIGHT_ARM_LIMIT_HIGH_POS_INCR				2200

#define SERVO_PLUS_0_DEG_INCR_X0						0
#define SERVO_PLUS_0_DEG_INCR_Y0						1000
#define SERVO_PLUS_0_DEG_INCR_X1						180
#define SERVO_PLUS_0_DEG_INCR_Y1						2000
#define SERVO_PLUS_0_LIMIT_LOW_POS_INCR					700
#define SERVO_PLUS_0_LIMIT_HIGH_POS_INCR				2200

#define SERVO_PLUS_1_DEG_INCR_X0						0
#define SERVO_PLUS_1_DEG_INCR_Y0						1000
#define SERVO_PLUS_1_DEG_INCR_X1						180
#define SERVO_PLUS_1_DEG_INCR_Y1						2000
#define SERVO_PLUS_1_LIMIT_LOW_POS_INCR					700
#define SERVO_PLUS_1_LIMIT_HIGH_POS_INCR				2200









#define POWER_MAIN_VOLTAGE_SHUTDOWN_LEVEL							20
#define POWER_MAIN_VOLTAGE_STOPBUTTON_LEVEL							3
#define POWER_MAIN_VOLTAGE_STOPBUTTON_FALLING_TIME_US				100
#define POWER_MAIN_VOLTAGE_STOPBUTTON_RISING_TIME_US				20000

#define POWER_MAIN_CURRENT_SHUTDOWN_LEVEL							3
#define POWER_ACT_CURRENT_SHUTDOWN_LEVEL							8

#define POWER_ACCU_VOLTAGE_OK_LEVEL									23

#define POWER_CHARGE_VOLTAGE_READY_LEVEL							26
#define POWER_CHARGE_VOLTAGE_PLUGGED_IN_LEVEL						12






#define DEADRECK_WHEEL_DISTANCE						500
#define DEADRECK_LEFT_ONE_INCREMENT_DISTANCE		0.1
#define DEADRECK_RIGHT_ONE_INCREMENT_DISTANCE		0.1
#define DEADRECK_LEFT_IS_ROTATE_DIR_A				1
#define DEADRECK_RIGHT_IS_ROTATE_DIR_A				1
#define DEADRECK_IS_LEFT_EQEP1						1





#define CONSOLE_CONTOLLER_LIMIT_LOW_POS_INCR		200
#define CONSOLE_CONTOLLER_LIMIT_HIGH_POS_INCR		100100
#define CONSOLE_HARDWARE_LIMIT_LOW_POS_INCR			100
#define CONSOLE_HARDWARE_LIMIT_HIGH_POS_INCR		100200
#define CONSOLE_CONTROLLER_PARAMETER_P				2.3
#define CONSOLE_CONTROLLER_PARAMETER_I				1.1
#define CONSOLE_CONTROLLER_PARAMETER_D				5.5
#define CONSOLE_PWM_MODE							4
#define CONSOLE_LIMIT_SWITCH_IS_ACTIVE_HIGH			1
#define CONSOLE_IS_ENC_EQEP1						1
#define CONSOLE_MOTOR_PLUS_CW						1






#endif	//PARAM_H_
